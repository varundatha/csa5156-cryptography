#include <stdio.h>
#include <string.h>
#include <ctype.h>

void encrypt(char plaintext[], char key[], char ciphertext[]);
void decrypt(char ciphertext[], char key[], char plaintext[]);

int main() {
    char plaintext[100];
    char key[100];
    char encrypted[100];
    char decrypted[100];

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';  // Remove newline character

    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);
    key[strcspn(key, "\n")] = '\0';  // Remove newline character

    encrypt(plaintext, key, encrypted);
    printf("Encrypted text: %s\n", encrypted);

    decrypt(encrypted, key, decrypted);
    printf("Decrypted text: %s\n", decrypted);

    return 0;
}

void encrypt(char plaintext[], char key[], char ciphertext[]) {
    int i, j, keyLength = strlen(key);

    for (i = 0, j = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char offset = isupper(plaintext[i]) ? 'A' : 'a';
            char keyOffset = isupper(key[j % keyLength]) ? 'A' : 'a';
            ciphertext[i] = ((plaintext[i] - offset + (toupper(key[j % keyLength]) - keyOffset)) % 26) + offset;
            j++;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0';
}

void decrypt(char ciphertext[], char key[], char plaintext[]) {
    int i, j, keyLength = strlen(key);

    for (i = 0, j = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char offset = isupper(ciphertext[i]) ? 'A' : 'a';
            char keyOffset = isupper(key[j % keyLength]) ? 'A' : 'a';
            plaintext[i] = ((ciphertext[i] - offset - (toupper(key[j % keyLength]) - keyOffset) + 26) % 26) + offset;
            j++;
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[i] = '\0';
}
